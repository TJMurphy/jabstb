aes(score)) +
stat_function(fun = dnorm, args=list(mean=13, 2.4))
df <- data.frame(score=c(1:25), y=dpois(1:25, 13))
ggplot(df, aes(score, y))+
geom_col()
df <- data.frame(score=c(1:25), y=dbinom(1:25, 25, 0.55))
ggplot(df, aes(score, y))+
geom_col()
ggplot(data.frame(score = c(1, 25)),
aes(score)) +
stat_function(fun = dnorm, args=list(mean=15, sd=2))
df <- data.frame(score=c(1:25), y=dpois(1:25, 13))
ggplot(df, aes(score, y))+
geom_col()
df <- data.frame(score=c(1:25), y=dbinom(1:25, 25, 0.55))
ggplot(df, aes(score, y))+
geom_col()
ggplot(data.frame(score = c(1, 25)),
aes(score)) +
stat_function(fun = dnorm, args=list(mean=15, sd=3))
df <- data.frame(score=c(1:25), y=dpois(1:25, 13))
ggplot(df, aes(score, y))+
geom_col()
df <- data.frame(score=c(1:25), y=dbinom(1:25, 25, 0.55))
ggplot(df, aes(score, y))+
geom_col()
ggplot(data.frame(score = c(1, 25)),
aes(score)) +
stat_function(fun = dnorm, args=list(mean=15, sd=2.5))
df <- data.frame(score=c(1:25), y=dpois(1:25, 13))
ggplot(df, aes(score, y))+
geom_col()
df <- data.frame(score=c(1:25), y=dbinom(1:25, 25, 0.55))
ggplot(df, aes(score, y))+
geom_col()
ggplot(data.frame(score = c(1, 25)),
aes(score)) +
stat_function(fun = dnorm, args=list(mean=15, sd=2.5))
df <- data.frame(score=c(1:25), y=dpois(1:25, 15))
ggplot(df, aes(score, y))+
geom_col()
df <- data.frame(score=c(1:25), y=dbinom(1:25, 25, 0.65))
ggplot(df, aes(score, y))+
geom_col()
ggplot(data.frame(score = c(1, 25)),
aes(score)) +
stat_function(fun = dnorm, args=list(mean=15, sd=2.5))
df <- data.frame(score=c(1:25), y=dpois(1:25, 15))
ggplot(df, aes(score, y))+
geom_col()
df <- data.frame(score=c(1:25), y=dbinom(1:25, 25, 0.55))
ggplot(df, aes(score, y))+
geom_col()
ggplot(data.frame(score = c(1, 25)),
aes(score)) +
stat_function(fun = dnorm, args=list(mean=15, sd=2.5))
df <- data.frame(score=c(1:25), y=dpois(1:25, 15))
ggplot(df, aes(score, y))+
geom_col()
df <- data.frame(score=c(1:25), y=dbinom(1:25, 25, 0.6))
ggplot(df, aes(score, y))+
geom_col()
ggplot(data.frame(score = c(1, 25)),
aes(score)) +
stat_function(fun = dnorm, args=list(mean=15, sd=1.5))
df <- data.frame(score=c(1:25), y=dpois(1:25, 15))
ggplot(df, aes(score, y))+
geom_col()
df <- data.frame(score=c(1:25), y=dbinom(1:25, 25, 0.6))
ggplot(df, aes(score, y))+
geom_col()
install.packages("r2d3")
library(r2d3)
prop.df <- data.frame(
group=c("positive", "negative"),
value=c(pos, neg)
)
library(PropCIs)
library(tidyverse)
library(binom)
library(pwr)
library(statmod)
library(EMT)
library(tidyverse)
utils
require(utils)
utils
str(utils)
nf <- gaussian()
nf
str(nf)
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
outcome
treatment <- gl(3,3)
treatment
d.AD <- data.frame(treatment, outcome, counts)
d.AD
positives <- rpois(5, 10)
positives
c.pos <- rpois(5, 10)
c.neg <- rpois(5, 20)
c.neg
c.pos <- rpois(5, 10)
c.neg <- rpois(5, 20)
t.pos <- rpois(5, 20)
t.neg <- rpois(5, 10)
treatment <- c(rep("control", 10), rep("experimental", 10))
treatment
treatment <- c(rep("control", 5), rep("experimental", 5))
rbind(c.pos, e.pos)
c.pos <- rpois(5, 10)
c.neg <- rpois(5, 20)
e.pos <- rpois(5, 20)
e.neg <- rpois(5, 10)
treatment <- c(rep("control", 5), rep("experimental", 5))
rbind(c.pos, e.pos)
cbind(c.pos, e.pos)
c.pos
success <- c(c.pos, e.pos )
success
c.pos <- rpois(5, 10)
c.neg <- rpois(5, 20)
e.pos <- rpois(5, 20)
e.neg <- rpois(5, 10)
positive <- c(c.pos, e.pos)
negative <- c(c.neg, e.neg)
data <- data.frame(treatment, positive, negative )
data
x <- rnorm(100)
y <- rpois(100, exp(1+x))
x
y
glm(y ~ x, family = quasi(variance = "mu", link = "log"))
data
data[2:10, 3:10]
data[2,3]
data[1:10, 2]
matrix(data[1:10, 2:3])
data
as.matrix(data[1:10, 2:3])
data
glm(as.matrix[1:10, 2:3], family=binomial)
glm(as.matrix[1:10, 2:3] ~ treatment, data=data, family=binomial)
glm(as.matrix(data[1:10, 2:3]) ~ treatment, data=data, family=binomial)
summary(glm(as.matrix(data[1:10, 2:3]) ~ treatment, data=data, family=binomial))
data
library(lme4)
id <- rep(c("A", "B", "C", "D", "E"), 2 )
id
data <- data.frame(id, treatment, positive, negative )
data
as.matrix(data[1:10, 3:4])
glmer(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial)
summary(glm(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial))
glmer(as.matrix(data[1:10, 3:4]) ~ treatment + id, data=data, family=binomial)
glmer(as.matrix(data[1:10, 3:4]) ~ treatment + 1|id, data=data, family=binomial)
glmer(as.matrix(data[1:10, 3:4]) ~ treatment + 0|id, data=data, family=binomial)
glmer(as.matrix(data[1:10, 3:4]) ~ treatment + treatment|id, data=data, family=binomial)
as.matrix
summary(glmer(as.matrix(data[1:10, 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:10, 3:4]) ~ treatment + 1|id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:10, 3:4]) ~ treatment + 0|id, data=data, family=binomial))
c.pos <- rpois(5, 5)
c.neg <- rpois(5, 20)
e.pos <- rpois(5, 20)
e.neg <- rpois(5, 5)
positive <- c(c.pos, e.pos)
negative <- c(c.neg, e.neg)
treatment <- c(rep("control", 5), rep("experimental", 5))
id <- rep(c("A", "B", "C", "D", "E"), 2 )
data <- data.frame(id, treatment, positive, negative )
data
summary(glm(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial))
summary(glmer(as.matrix(data[1:10, 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
mod <- glmer(as.matrix(data[1:10, 3:4]) ~ treatment + 0|id, data=data, family=binomial)
anova(mod)
t.test(mod)
ANOVA(mod)
mod
summary(glm(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial))
f.mod <- glm(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial)
summary(f.mod)
library(lme4)
anova(f.mod)
summary(glmer(as.matrix(data[1:10, 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:10, 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
data
chisq.test(data)
chisq.test(table(data))
chisq.test(as.matrix(data[1:10, 3:4]) ~ treatment)
x <- trunc(5 * runif(100))
x
chisq.test(table(x))
x <- trunc(4 * runif(100))
x
x <- trunc(runif(100))
x
x <- runif(100)
x
x <- trunc(runif(100))
x
x <- 2*trunc(runif(100))
x
x <- trunc(2*runif(100))
x
x <- trunc(5*runif(100))
x
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
M
dimnames(M) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
M
chisq.test(M)
summary(glm(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial))
f.mod <- glm(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial)
anova(f.mod)
lrt(f.mod)
lrtest(f.mod)
f.mod
str(f.mod)
summary(glmer(as.matrix(data[1:10, 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
mixed <- glmer(as.matrix(data[1:10, 3:4]) ~ treatment + treatment|id, data=data, family=binomial)
fixed <- glmer(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial)
mixed
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.8, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 1, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.99, 0.40, 0.20))
setwd("~/My R")
tmp <- installed.packages()
tmp
installedpkgs <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
save(installedpkgs, file="installed_old.rda")
installedpkgs
version()
version
library(r2d3)
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.99, 0.40, 0.20))
data <- c(1, 2, 3, 4, 5, 6)
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.99, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data)
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.99, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(1, 0.6, 0.8, 0.99, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(1, 0.6, 0.8, 0.98, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(1, 0.6, 0.8, 0.98, 0.40, 0.20))
data <- c(1, 2, 3, 4, 5, 6)
r2d3(data=c(1, 2,3, 4, 5, 6), script="preview.js")
r2d3(data=c(1, 2,3, 4, 5, 6), script="preview.js")
r2d3(data=c(1, 2,3, 4, 5, 6), script="preview.js")
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(1, 2, 3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(1, .22, .3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(3, .22, .3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(1, .22, .3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(.9, .22, .3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(.9, .22, .3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(.9, .22, .3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(.9, .22, .3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(.9, .22, .3, 0.95, 0.40, 0.20))
r2d3::r2d3("~/Dev/D3/preview.js", data=c(.9, .22, .3, 0.95, 0.40, 0.20))
library(PropCIs)
library(tidyverse)
library(binom)
library(pwr)
library(statmod)
library(EMT)
ggplot(
prop.df,
(aes(
x=group,
y=value,
fill=group)
)
) +
geom_bar(stat="identity")
ggplot(
prop.df,
(aes(x="",
y=value,
fill=group)
)
) +
geom_bar(stat="identity")
prop.df <- data.frame(
group=c("positive", "negative"),
value=c(pos, neg)
)
prop.df <- data.frame(
group=c("positive", "negative"),
value=c(pos, neg)
)
#these are the initializers
#number of experiments to simulate, each of trial size n
sims <- 1000
#expected null proportion
null <- 0.15
#expected minimal effect proportion
alternate <- 0.20
#binomial trial size, just a guess
n <- 450
#type 1 error threshold
alpha <- 0.05
#s1 is a random sample vector
#each value is the number of
#successes observed in a trial
#of size n, given the alternate proportion.
#it simulates the outcome of one experiment "sims" times
s1 <- rbinom(sims, n, alternate)
#t1 is a vector of p-values,
#derived from a one sample proportion test
#on each of the values in s1.
#read from inside the function to see the logic
t1 <- unlist(
lapply(
s1,
function(s1){
prop.test(
s1, n, null,
alternative="two.sided",
conf.level=1-alpha,
correct=T)$p.value
}
)
)
power <- length(which(t1 < alpha))/sims
power
prop.df <- data.frame(
group=c("positive", "negative"),
value=c(pos, neg)
)
pos <- 5042
neg <- 18492
n <- pos+neg #trial size
prop <- pos/n
prop
pos <- 5042
neg <- 18492
n <- pos+neg #trial size
prop <- pos/n
prop
scoreci(pos, n, conf.level=0.95)
#pos and n in the test arguments are objects that were defined above!
prop.test(
pos, n, p=0.15,
alternative = "greater",
conf.level = 0.95,
correct = TRUE
)
binom.test(pos, n, p=0.15)
binom.test(x=567, n=1778, p=0.15)
prop.test(
x=c(567, 412),
n=c(1778, 1897),
conf.level=0.9999999
)
M <- matrix(
c(567, 412, 1211, 1485),
nrow=2,
dimnames = list(
Treat=c("Cytokine", "Vehicle"),
Antigen=c("Positive", "Negative")
)
)
M
fisher.test(M)
x <- c(A=14, B=3, C=7, D=4)
prob <- c(A=.25, B=.25, C=.25, D=.25)
multinomial.test(
x,
prob=prob
)
chisq.test(x)
chisq.test(x)$expected
x <- matrix(
c(14, 16, 6, 64),
ncol=2,
dimnames = list(
Marker=c("Present", "Absent"),
Cancer = c("Present", "Absent")
)
)
x
fisher.test(x)
#more argument customization than this is possible
x <- matrix(
c(14, 16, 6, 64),
ncol=2,
dimnames = list(
Marker=c("Present", "Absent"),
Cancer = c("Present", "Absent")
)
)
x
prop.test(x)
chisq.test(x)
chisq.test(x, correct=F)
prop.df <- data.frame(
group=c("positive", "negative"),
value=c(pos, neg)
)
prop.df
ggplot(
prop.df,
(aes(x="",
y=value,
fill=group)
)
) +
geom_bar(stat="identity")
ggplot(
prop.df,
(aes(
x=group,
y=value,
fill=group)
)
) +
geom_bar(stat="identity")
c.pos <- rpois(5, 5)
c.neg <- rpois(5, 20)
e.pos <- rpois(5, 20)
e.neg <- rpois(5, 5)
positive <- c(c.pos, e.pos)
negative <- c(c.neg, e.neg)
treatment <- c(rep("control", 5), rep("experimental", 5))
id <- rep(c("A", "B", "C", "D", "E"), 2 )
data <- data.frame(id, treatment, positive, negative )
data
f.mod <- glm(as.matrix(data[1:10, 3:4]) ~ treatment, data=data, family=binomial)
summary(f.mod)
f.mod
summary(f.mod)
data
library(lme4)
summary(glmer(as.matrix(data[1:10, 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
n <- 5
c.pos <- rpois(n, 5)
c.neg <- rpois(n, 20)
e.pos <- rpois(n, 20)
e.neg <- rpois(n, 5)
positive <- c(c.pos, e.pos)
negative <- c(c.neg, e.neg)
?sample()
sample(LETTERS, 5)
LETTERS[1:6]
id <- rep(LETTERS[1:n], 2 )
id
n <- 5
c.pos <- rpois(n, 5)
c.neg <- rpois(n, 20)
e.pos <- rpois(n, 20)
e.neg <- rpois(n, 5)
positive <- c(c.pos, e.pos)
negative <- c(c.neg, e.neg)
treatment <- c(rep("control", n), rep("experimental", n))
id <- rep(LETTERS[1:n], 2 )
data <- data.frame(id, treatment, positive, negative )
summary(glm(as.matrix(data[1:2*n, 3:4]) ~ treatment, data=data, family=binomial))
data
data[1:2*n]
data[1:(2*n)]
data[1:n]
data[1:10]
data[1:10, 3:4]
data[1:2*n, 3:4]
data[1:(2*n), 3:4]
summary(glm(as.matrix(data[1:(2*n), 3:4]) ~ treatment, data=data, family=binomial))
f.mod <- glm(as.matrix(data[1:(2*n), 3:4]) ~ treatment, data=data, family=binomial)
summary(f.mod)
summary(glmer(as.matrix(data[1:2*n, 3:4]) ~ treatment + id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:2*n, 3:4]) ~ treatment + 0|id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:2*n, 3:4]) ~ treatment + 1|id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:(2*n), 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:(2*n), 3:4]) ~ treatment + id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:(2*n), 3:4]) ~ treatment + 0|id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:(2*n), 3:4]) ~ treatment + 1|id, data=data, family=binomial))
summary(glmer(as.matrix(data[1:(2*n), 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
n <- 10
c.pos <- rpois(n, 5)
c.neg <- rpois(n, 20)
e.pos <- rpois(n, 20)
e.neg <- rpois(n, 5)
positive <- c(c.pos, e.pos)
negative <- c(c.neg, e.neg)
treatment <- c(rep("control", n), rep("experimental", n))
id <- rep(LETTERS[1:n], 2 )
data <- data.frame(id, treatment, positive, negative )
summary(glm(as.matrix(data[1:(2*n), 3:4]) ~ treatment, data=data, family=binomial))
f.mod <- glm(as.matrix(data[1:(2*n), 3:4]) ~ treatment, data=data, family=binomial)
summary(f.mod)
library(lme4)
summary(glmer(as.matrix(data[1:(2*n), 3:4]) ~ treatment + treatment|id, data=data, family=binomial))
mixed <- glmer(as.matrix(data[1:2*n, 3:4]) ~ treatment + treatment|id, data=data, family=binomial)
mixed <- glmer(as.matrix(data[1:(2*n), 3:4]) ~ treatment + treatment|id, data=data, family=binomial)
log(0.5)
setwd("~/GradschoolmatchdotCom/Carnegie")
library(xlsx)
uni.dat <- read.xlsx2("CCIHE2018-PublicDataFile.xlsx", 4)
uni.dat
ggplot(data=uni.dat, mapping=aes(x=NONS&ER&D+S&ER&D, y=GRTENR17 ))+
geom_point()
uni.dat <- read.xlsx2("CCIHE2018-PublicDataFile.xlsx", 4)
ggplot(data=uni.dat, mapping=aes(x=NONS&ER&D+S&ER&D, y=GRTENR17 ))+
geom_point()
ggplot(data=uni.dat, mapping=aes(x=NONSERD+SERD, y=GRTENR17 ))+
geom_point()
ggplot(data=uni.dat, mapping=aes(x=SERD, y=GRTENR17 ))+
geom_point()
